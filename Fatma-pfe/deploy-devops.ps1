# Script de d√©ploiement DevOps pour Fatma PFE
param(
    [string]$Environment = "development",
    [switch]$Build,
    [switch]$Deploy,
    [switch]$Test
)

Write-Host "üöÄ D√©ploiement DevOps - Fatma PFE" -ForegroundColor Green
Write-Host "Environment: $Environment" -ForegroundColor Yellow

# Variables
$DockerComposeFile = "docker-compose.yml"
$BackendPath = "backend-pfe"
$FrontendPath = "frontend-pfe-admin"
$AIServicePath = "ai-prediction-service"

# Fonction pour v√©rifier les pr√©requis
function Test-Prerequisites {
    Write-Host "üîç V√©rification des pr√©requis..." -ForegroundColor Blue
    
    # V√©rifier Docker
    try {
        $dockerVersion = docker --version
        Write-Host "‚úÖ Docker: $dockerVersion" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå Docker non install√©" -ForegroundColor Red
        exit 1
    }
    
    # V√©rifier Docker Compose
    try {
        $composeVersion = docker-compose --version
        Write-Host "‚úÖ Docker Compose: $composeVersion" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå Docker Compose non install√©" -ForegroundColor Red
        exit 1
    }
    
    # V√©rifier Node.js
    try {
        $nodeVersion = node --version
        Write-Host "‚úÖ Node.js: $nodeVersion" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå Node.js non install√©" -ForegroundColor Red
        exit 1
    }
}

# Fonction pour construire les images
function Build-Images {
    Write-Host "üî® Construction des images Docker..." -ForegroundColor Blue
    
    # Construire le backend
    Write-Host "üì¶ Construction du backend..." -ForegroundColor Yellow
    Set-Location $BackendPath
    docker build -t fatma-pfe-backend .
    Set-Location ..
    
    # Construire le frontend
    Write-Host "üì¶ Construction du frontend..." -ForegroundColor Yellow
    Set-Location $FrontendPath
    docker build -t fatma-pfe-frontend .
    Set-Location ..
    
    # Construire le service AI
    Write-Host "üì¶ Construction du service AI..." -ForegroundColor Yellow
    Set-Location $AIServicePath
    docker build -t fatma-pfe-ai .
    Set-Location ..
    
    Write-Host "‚úÖ Construction termin√©e" -ForegroundColor Green
}

# Fonction pour ex√©cuter les tests
function Run-Tests {
    Write-Host "üß™ Ex√©cution des tests..." -ForegroundColor Blue
    
    # Tests backend
    Write-Host "üß™ Tests backend..." -ForegroundColor Yellow
    Set-Location $BackendPath
    npm test
    Set-Location ..
    
    # Tests frontend
    Write-Host "üß™ Tests frontend..." -ForegroundColor Yellow
    Set-Location $FrontendPath
    npm test -- --watchAll=false
    Set-Location ..
    
    Write-Host "‚úÖ Tests termin√©s" -ForegroundColor Green
}

# Fonction pour d√©ployer
function Deploy-Application {
    Write-Host "üöÄ D√©ploiement de l'application..." -ForegroundColor Blue
    
    # Arr√™ter les conteneurs existants
    Write-Host "üõë Arr√™t des conteneurs existants..." -ForegroundColor Yellow
    docker-compose -f $DockerComposeFile down
    
    # D√©marrer les services
    Write-Host "‚ñ∂Ô∏è D√©marrage des services..." -ForegroundColor Yellow
    docker-compose -f $DockerComposeFile up -d
    
    # Attendre que les services soient pr√™ts
    Write-Host "‚è≥ Attente du d√©marrage des services..." -ForegroundColor Yellow
    Start-Sleep -Seconds 30
    
    # V√©rifier l'√©tat des services
    Write-Host "üîç V√©rification de l'√©tat des services..." -ForegroundColor Yellow
    docker-compose -f $DockerComposeFile ps
    
    Write-Host "‚úÖ D√©ploiement termin√©" -ForegroundColor Green
    Write-Host "üåê Services disponibles:" -ForegroundColor Cyan
    Write-Host "   - Frontend: http://localhost:8080" -ForegroundColor White
    Write-Host "   - Backend: http://localhost:4000" -ForegroundColor White
    Write-Host "   - AI Service: http://localhost:8000" -ForegroundColor White
    Write-Host "   - Database: localhost:5432" -ForegroundColor White
}

# Ex√©cution principale
try {
    Test-Prerequisites
    
    if ($Build) {
        Build-Images
    }
    
    if ($Test) {
        Run-Tests
    }
    
    if ($Deploy) {
        Deploy-Application
    }
    
    # Si aucun param√®tre sp√©cifi√©, ex√©cuter tout
    if (-not $Build -and -not $Deploy -and -not $Test) {
        Build-Images
        Run-Tests
        Deploy-Application
    }
}
catch {
    Write-Host "‚ùå Erreur lors du d√©ploiement: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
} 